"""rename image column to path

Revision ID: 6191a6aa322d
Revises: e2f19c5f2fed
Create Date: 2023-07-26 17:44:47.254841

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "6191a6aa322d"
down_revision = "e2f19c5f2fed"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "sku",
        sa.Column("sku", sa.String(length=255), nullable=False),
        sa.Column("price", sa.DECIMAL(precision=10, scale=2), nullable=False),
        sa.Column("model_id", sa.UUID(), nullable=False),
        sa.Column("color_id", sa.UUID(), nullable=False),
        sa.Column("quantity", sa.Integer(), nullable=False),
        sa.Column("available", sa.Boolean(), nullable=False),
        sa.Column("deleted_at", sa.TIMESTAMP(), nullable=True),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "uuid",
            sa.UUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["color_id"], ["color.uuid"], name=op.f("fk__sku__color_id__color")
        ),
        sa.ForeignKeyConstraint(
            ["model_id"], ["model.uuid"], name=op.f("fk__sku__model_id__model")
        ),
        sa.PrimaryKeyConstraint("uuid", name=op.f("pk__sku")),
    )
    op.create_index(op.f("ix__sku__sku"), "sku", ["sku"], unique=True)
    op.create_index(op.f("ix__sku__uuid"), "sku", ["uuid"], unique=True)
    op.create_table(
        "Sku_image",
        sa.Column("path", sa.String(length=255), nullable=False),
        sa.Column("sku_id", sa.UUID(), nullable=False),
        sa.Column("deleted_at", sa.TIMESTAMP(), nullable=True),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "uuid",
            sa.UUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["sku_id"], ["sku.uuid"], name=op.f("fk__Sku_image__sku_id__sku")
        ),
        sa.PrimaryKeyConstraint("uuid", name=op.f("pk__Sku_image")),
    )
    op.create_index(op.f("ix__Sku_image__uuid"), "Sku_image", ["uuid"], unique=True)
    op.drop_index("ix__product_image__uuid", table_name="product_image")
    op.drop_table("product_image")
    op.drop_index("ix__product__sku", table_name="product")
    op.drop_index("ix__product__uuid", table_name="product")
    op.drop_table("product")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "product",
        sa.Column("sku", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.Column(
            "price",
            sa.NUMERIC(precision=10, scale=2),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("model_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("color_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("quantity", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("available", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "uuid",
            sa.UUID(),
            server_default=sa.text("gen_random_uuid()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["color_id"], ["color.uuid"], name="fk__product__color_id__color"
        ),
        sa.ForeignKeyConstraint(
            ["model_id"], ["model.uuid"], name="fk__product__model_id__model"
        ),
        sa.PrimaryKeyConstraint("uuid", name="pk__product"),
        postgresql_ignore_search_path=False,
    )
    op.create_index("ix__product__uuid", "product", ["uuid"], unique=False)
    op.create_index("ix__product__sku", "product", ["sku"], unique=False)
    op.create_table(
        "product_image",
        sa.Column("path", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.Column("product_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "uuid",
            sa.UUID(),
            server_default=sa.text("gen_random_uuid()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["product.uuid"],
            name="fk__product_image__product_id__product",
        ),
        sa.PrimaryKeyConstraint("uuid", name="pk__product_image"),
    )
    op.create_index("ix__product_image__uuid", "product_image", ["uuid"], unique=False)
    op.drop_index(op.f("ix__Sku_image__uuid"), table_name="Sku_image")
    op.drop_table("Sku_image")
    op.drop_index(op.f("ix__sku__uuid"), table_name="sku")
    op.drop_index(op.f("ix__sku__sku"), table_name="sku")
    op.drop_table("sku")
    # ### end Alembic commands ###
