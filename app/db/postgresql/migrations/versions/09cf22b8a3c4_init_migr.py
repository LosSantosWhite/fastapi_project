"""init migr

Revision ID: 09cf22b8a3c4
Revises: 130e771e7238
Create Date: 2023-09-25 13:07:03.431770

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '09cf22b8a3c4'
down_revision = '130e771e7238'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('model',
    sa.Column('brand_id', sa.UUID(), nullable=False),
    sa.Column('collection_id', sa.UUID(), nullable=False),
    sa.Column('categories_id', postgresql.ARRAY(sa.UUID()), nullable=False),
    sa.Column('box_width', sa.Integer(), nullable=False),
    sa.Column('box_length', sa.Integer(), nullable=False),
    sa.Column('box_height', sa.Integer(), nullable=False),
    sa.Column('box_weight', sa.Integer(), nullable=False),
    sa.Column('open_width', sa.Integer(), nullable=False),
    sa.Column('open_length', sa.Integer(), nullable=False),
    sa.Column('open_height', sa.Integer(), nullable=False),
    sa.Column('close_width', sa.Integer(), nullable=True),
    sa.Column('close_length', sa.Integer(), nullable=True),
    sa.Column('close_height', sa.Integer(), nullable=True),
    sa.Column('weight', sa.Integer(), nullable=False),
    sa.Column('specification', postgresql.JSON(astext_type=sa.Text()), nullable=False),
    sa.Column('deleted_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('uuid', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.ForeignKeyConstraint(['brand_id'], ['brand.uuid'], name=op.f('fk__model__brand_id__brand')),
    sa.ForeignKeyConstraint(['collection_id'], ['collection.uuid'], name=op.f('fk__model__collection_id__collection')),
    sa.PrimaryKeyConstraint('uuid', name=op.f('pk__model')),
    sa.UniqueConstraint('name', name=op.f('uq__model__name'))
    )
    op.create_index(op.f('ix__model__uuid'), 'model', ['uuid'], unique=True)
    op.create_table('sku',
    sa.Column('sku', sa.String(length=255), nullable=False),
    sa.Column('price', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('model_id', sa.UUID(), nullable=False),
    sa.Column('color_id', sa.UUID(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('available', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('uuid', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.ForeignKeyConstraint(['color_id'], ['color.uuid'], name=op.f('fk__sku__color_id__color')),
    sa.ForeignKeyConstraint(['model_id'], ['model.uuid'], name=op.f('fk__sku__model_id__model')),
    sa.PrimaryKeyConstraint('uuid', name=op.f('pk__sku'))
    )
    op.create_index(op.f('ix__sku__sku'), 'sku', ['sku'], unique=True)
    op.create_index(op.f('ix__sku__uuid'), 'sku', ['uuid'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix__sku__uuid'), table_name='sku')
    op.drop_index(op.f('ix__sku__sku'), table_name='sku')
    op.drop_table('sku')
    op.drop_index(op.f('ix__model__uuid'), table_name='model')
    op.drop_table('model')
    # ### end Alembic commands ###
